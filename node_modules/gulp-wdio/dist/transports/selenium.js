'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Selenium = undefined;

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _events = require('events');

var _events2 = _interopRequireDefault(_events);

var _seleniumStandalone = require('selenium-standalone');

var _seleniumStandalone2 = _interopRequireDefault(_seleniumStandalone);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Selenium = exports.Selenium = function (_EventEmitter) {
  (0, _inherits3.default)(Selenium, _EventEmitter);

  function Selenium() {
    (0, _classCallCheck3.default)(this, Selenium);

    var _this = (0, _possibleConstructorReturn3.default)(this, (Selenium.__proto__ || (0, _getPrototypeOf2.default)(Selenium)).call(this));

    _this.child = null;

    _this.config = {
      logger: function logger(message) {
        _this.emit('message', message);
      }
    };
    return _this;
  }

  (0, _createClass3.default)(Selenium, [{
    key: 'install',
    value: function install() {
      var _this2 = this;

      return new _promise2.default(function (resolve, reject) {
        _seleniumStandalone2.default.install(_this2.config, function (error) {
          if (error) {
            _this2.emit('error', error);
            reject(error);
            return;
          }

          resolve();
        });
      });
    }
  }, {
    key: 'start',
    value: function start() {
      var _this3 = this;

      return new _promise2.default(function (resolve, reject) {
        _this3.install().then(function () {
          _seleniumStandalone2.default.start({
            spawnOptions: {
              stdio: 'ignore'
            }
          }, function (error, child) {
            if (error) {
              _this3.emit('error', error);
              reject(error);
              return;
            }

            _this3.child = child;

            _this3.emit('start', 'Selenium started');
            resolve(child);
          });
        }).catch(reject);
      });
    }
  }, {
    key: 'stop',
    value: function stop() {
      var _this4 = this;

      return new _promise2.default(function (resolve) {
        // Since child defined only at the "start"
        if (_this4.child) {
          _this4.child.kill();
          _this4.child = null;
          _this4.emit('stop', 'Selenium stopped');
        }

        resolve();
      });
    }
  }]);
  return Selenium;
}(_events2.default);